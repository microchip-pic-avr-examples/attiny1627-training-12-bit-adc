
Solution6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  00000286  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000212  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00803800  00803800  00000286  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000286  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b8  2**2
                  CONTENTS, READONLY
  5 .debug_info   00001c2f  00000000  00000000  000002f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001ab0  00000000  00000000  00001f27  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000014b  00000000  00000000  000039d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000c8d  00000000  00000000  00003b22  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  58:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  5c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  60:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  68:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  6c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  70:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  74:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	df e3       	ldi	r29, 0x3F	; 63
  82:	de bf       	out	0x3e, r29	; 62

00000084 <__do_clear_bss>:
  84:	28 e3       	ldi	r18, 0x38	; 56
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b8 e3       	ldi	r27, 0x38	; 56
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	a2 31       	cpi	r26, 0x12	; 18
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 b0 00 	call	0x160	; 0x160 <main>
  98:	0c 94 07 01 	jmp	0x20e	; 0x20e <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <adc_init>:
  a0:	e0 e0       	ldi	r30, 0x00	; 0
  a2:	f6 e0       	ldi	r31, 0x06	; 6
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	80 83       	st	Z, r24
  a8:	81 83       	std	Z+1, r24	; 0x01
  aa:	80 e5       	ldi	r24, 0x50	; 80
  ac:	82 83       	std	Z+2, r24	; 0x02
  ae:	83 e0       	ldi	r24, 0x03	; 3
  b0:	80 87       	std	Z+8, r24	; 0x08
  b2:	8a e0       	ldi	r24, 0x0A	; 10
  b4:	81 87       	std	Z+9, r24	; 0x09
  b6:	86 e4       	ldi	r24, 0x46	; 70
  b8:	84 87       	std	Z+12, r24	; 0x0c
  ba:	84 e4       	ldi	r24, 0x44	; 68
  bc:	82 87       	std	Z+10, r24	; 0x0a
  be:	8b e5       	ldi	r24, 0x5B	; 91
  c0:	83 87       	std	Z+11, r24	; 0x0b
  c2:	08 95       	ret

000000c4 <adc_get_sample>:
  c4:	80 91 14 06 	lds	r24, 0x0614	; 0x800614 <__RODATA_PM_OFFSET__+0x7f8614>
  c8:	90 91 15 06 	lds	r25, 0x0615	; 0x800615 <__RODATA_PM_OFFSET__+0x7f8615>
  cc:	08 95       	ret

000000ce <adc_get_result>:
  ce:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__RODATA_PM_OFFSET__+0x7f8610>
  d2:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__RODATA_PM_OFFSET__+0x7f8611>
  d6:	80 91 12 06 	lds	r24, 0x0612	; 0x800612 <__RODATA_PM_OFFSET__+0x7f8612>
  da:	90 91 13 06 	lds	r25, 0x0613	; 0x800613 <__RODATA_PM_OFFSET__+0x7f8613>
  de:	08 95       	ret

000000e0 <adc_result_is_ready>:
  e0:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
  e4:	81 70       	andi	r24, 0x01	; 1
  e6:	08 95       	ret

000000e8 <clock_init>:
  e8:	21 e0       	ldi	r18, 0x01	; 1
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	88 ed       	ldi	r24, 0xD8	; 216
  ee:	84 bf       	out	0x34, r24	; 52
  f0:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
  f4:	08 95       	ret

000000f6 <transmit_to_DV>:
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	83 e0       	ldi	r24, 0x03	; 3
  fc:	0e 94 00 01 	call	0x200	; 0x200 <usart0_put_c>
 100:	c0 e0       	ldi	r28, 0x00	; 0
 102:	d8 e3       	ldi	r29, 0x38	; 56
 104:	8c 81       	ldd	r24, Y+4	; 0x04
 106:	0e 94 00 01 	call	0x200	; 0x200 <usart0_put_c>
 10a:	8d 81       	ldd	r24, Y+5	; 0x05
 10c:	0e 94 00 01 	call	0x200	; 0x200 <usart0_put_c>
 110:	8e 81       	ldd	r24, Y+6	; 0x06
 112:	0e 94 00 01 	call	0x200	; 0x200 <usart0_put_c>
 116:	8f 81       	ldd	r24, Y+7	; 0x07
 118:	0e 94 00 01 	call	0x200	; 0x200 <usart0_put_c>
 11c:	88 85       	ldd	r24, Y+8	; 0x08
 11e:	0e 94 00 01 	call	0x200	; 0x200 <usart0_put_c>
 122:	89 85       	ldd	r24, Y+9	; 0x09
 124:	0e 94 00 01 	call	0x200	; 0x200 <usart0_put_c>
 128:	8c ef       	ldi	r24, 0xFC	; 252
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	0c 94 00 01 	jmp	0x200	; 0x200 <usart0_put_c>

00000132 <event_system_init>:
 132:	e0 e8       	ldi	r30, 0x80	; 128
 134:	f1 e0       	ldi	r31, 0x01	; 1
 136:	86 e0       	ldi	r24, 0x06	; 6
 138:	80 8b       	std	Z+16, r24	; 0x10
 13a:	81 e0       	ldi	r24, 0x01	; 1
 13c:	80 a7       	std	Z+40, r24	; 0x28
 13e:	81 a7       	std	Z+41, r24	; 0x29
 140:	08 95       	ret

00000142 <io_init>:
 142:	e0 e2       	ldi	r30, 0x20	; 32
 144:	f4 e0       	ldi	r31, 0x04	; 4
 146:	84 e8       	ldi	r24, 0x84	; 132
 148:	81 83       	std	Z+1, r24	; 0x01
 14a:	a0 e0       	ldi	r26, 0x00	; 0
 14c:	b4 e0       	ldi	r27, 0x04	; 4
 14e:	56 96       	adiw	r26, 0x16	; 22
 150:	8c 91       	ld	r24, X
 152:	56 97       	sbiw	r26, 0x16	; 22
 154:	84 60       	ori	r24, 0x04	; 4
 156:	56 96       	adiw	r26, 0x16	; 22
 158:	8c 93       	st	X, r24
 15a:	80 e8       	ldi	r24, 0x80	; 128
 15c:	86 83       	std	Z+6, r24	; 0x06
 15e:	08 95       	ret

00000160 <main>:
 160:	0e 94 74 00 	call	0xe8	; 0xe8 <clock_init>
 164:	0e 94 a1 00 	call	0x142	; 0x142 <io_init>
 168:	0e 94 50 00 	call	0xa0	; 0xa0 <adc_init>
 16c:	0e 94 e7 00 	call	0x1ce	; 0x1ce <rtc_init>
 170:	0e 94 99 00 	call	0x132	; 0x132 <event_system_init>
 174:	0e 94 f7 00 	call	0x1ee	; 0x1ee <usart0_init>
 178:	c0 e8       	ldi	r28, 0x80	; 128
 17a:	0e 94 70 00 	call	0xe0	; 0xe0 <adc_result_is_ready>
 17e:	88 23       	and	r24, r24
 180:	e1 f3       	breq	.-8      	; 0x17a <main+0x1a>
 182:	0e 94 62 00 	call	0xc4	; 0xc4 <adc_get_sample>
 186:	80 93 04 38 	sts	0x3804, r24	; 0x803804 <__DATA_REGION_ORIGIN__+0x4>
 18a:	90 93 05 38 	sts	0x3805, r25	; 0x803805 <__DATA_REGION_ORIGIN__+0x5>
 18e:	0e 94 67 00 	call	0xce	; 0xce <adc_get_result>
 192:	60 93 00 38 	sts	0x3800, r22	; 0x803800 <__DATA_REGION_ORIGIN__>
 196:	70 93 01 38 	sts	0x3801, r23	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
 19a:	80 93 02 38 	sts	0x3802, r24	; 0x803802 <__DATA_REGION_ORIGIN__+0x2>
 19e:	90 93 03 38 	sts	0x3803, r25	; 0x803803 <__DATA_REGION_ORIGIN__+0x3>
 1a2:	dc 01       	movw	r26, r24
 1a4:	cb 01       	movw	r24, r22
 1a6:	2a e0       	ldi	r18, 0x0A	; 10
 1a8:	b6 95       	lsr	r27
 1aa:	a7 95       	ror	r26
 1ac:	97 95       	ror	r25
 1ae:	87 95       	ror	r24
 1b0:	2a 95       	dec	r18
 1b2:	d1 f7       	brne	.-12     	; 0x1a8 <main+0x48>
 1b4:	80 93 06 38 	sts	0x3806, r24	; 0x803806 <__DATA_REGION_ORIGIN__+0x6>
 1b8:	90 93 07 38 	sts	0x3807, r25	; 0x803807 <__DATA_REGION_ORIGIN__+0x7>
 1bc:	a0 93 08 38 	sts	0x3808, r26	; 0x803808 <__DATA_REGION_ORIGIN__+0x8>
 1c0:	b0 93 09 38 	sts	0x3809, r27	; 0x803809 <__DATA_REGION_ORIGIN__+0x9>
 1c4:	0e 94 7b 00 	call	0xf6	; 0xf6 <transmit_to_DV>
 1c8:	c0 93 27 04 	sts	0x0427, r28	; 0x800427 <__RODATA_PM_OFFSET__+0x7f8427>
 1cc:	d6 cf       	rjmp	.-84     	; 0x17a <main+0x1a>

000001ce <rtc_init>:
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__RODATA_PM_OFFSET__+0x7f8140>
 1d4:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__RODATA_PM_OFFSET__+0x7f8147>
 1d8:	80 e1       	ldi	r24, 0x10	; 16
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__RODATA_PM_OFFSET__+0x7f814a>
 1e0:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__RODATA_PM_OFFSET__+0x7f814b>
 1e4:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7f8141>
 1e8:	81 11       	cpse	r24, r1
 1ea:	fc cf       	rjmp	.-8      	; 0x1e4 <rtc_init+0x16>
 1ec:	08 95       	ret

000001ee <usart0_init>:
 1ee:	e0 e0       	ldi	r30, 0x00	; 0
 1f0:	f8 e0       	ldi	r31, 0x08	; 8
 1f2:	80 e4       	ldi	r24, 0x40	; 64
 1f4:	86 83       	std	Z+6, r24	; 0x06
 1f6:	8b e5       	ldi	r24, 0x5B	; 91
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	80 87       	std	Z+8, r24	; 0x08
 1fc:	91 87       	std	Z+9, r25	; 0x09
 1fe:	08 95       	ret

00000200 <usart0_put_c>:
 200:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 204:	95 ff       	sbrs	r25, 5
 206:	fc cf       	rjmp	.-8      	; 0x200 <usart0_put_c>
 208:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
 20c:	08 95       	ret

0000020e <_exit>:
 20e:	f8 94       	cli

00000210 <__stop_program>:
 210:	ff cf       	rjmp	.-2      	; 0x210 <__stop_program>
