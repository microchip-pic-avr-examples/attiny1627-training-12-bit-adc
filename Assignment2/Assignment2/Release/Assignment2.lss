
Assignment2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  000002a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000022c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00803800  00803800  000002a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY
  5 .debug_info   00001c2f  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001ab0  00000000  00000000  00001f3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000014b  00000000  00000000  000039ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000c8d  00000000  00000000  00003b3a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  58:	0c 94 70 00 	jmp	0xe0	; 0xe0 <__vector_22>
  5c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  60:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  68:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  6c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  70:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  74:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	df e3       	ldi	r29, 0x3F	; 63
  82:	de bf       	out	0x3e, r29	; 62

00000084 <__do_clear_bss>:
  84:	28 e3       	ldi	r18, 0x38	; 56
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b8 e3       	ldi	r27, 0x38	; 56
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	ab 30       	cpi	r26, 0x0B	; 11
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 bd 00 	call	0x17a	; 0x17a <main>
  98:	0c 94 14 01 	jmp	0x228	; 0x228 <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <adc_init>:
  a0:	e0 e0       	ldi	r30, 0x00	; 0
  a2:	f6 e0       	ldi	r31, 0x06	; 6
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	80 83       	st	Z, r24
  a8:	81 83       	std	Z+1, r24	; 0x01
  aa:	80 e5       	ldi	r24, 0x50	; 80
  ac:	82 83       	std	Z+2, r24	; 0x02
  ae:	83 e0       	ldi	r24, 0x03	; 3
  b0:	80 87       	std	Z+8, r24	; 0x08
  b2:	8a e0       	ldi	r24, 0x0A	; 10
  b4:	81 87       	std	Z+9, r24	; 0x09
  b6:	85 e0       	ldi	r24, 0x05	; 5
  b8:	84 87       	std	Z+12, r24	; 0x0c
  ba:	08 95       	ret

000000bc <adc_get_sample>:
  bc:	80 91 14 06 	lds	r24, 0x0614	; 0x800614 <__RODATA_PM_OFFSET__+0x7f8614>
  c0:	90 91 15 06 	lds	r25, 0x0615	; 0x800615 <__RODATA_PM_OFFSET__+0x7f8615>
  c4:	08 95       	ret

000000c6 <adc_get_result>:
  c6:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__RODATA_PM_OFFSET__+0x7f8610>
  ca:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__RODATA_PM_OFFSET__+0x7f8611>
  ce:	80 91 12 06 	lds	r24, 0x0612	; 0x800612 <__RODATA_PM_OFFSET__+0x7f8612>
  d2:	90 91 13 06 	lds	r25, 0x0613	; 0x800613 <__RODATA_PM_OFFSET__+0x7f8613>
  d6:	08 95       	ret

000000d8 <adc_result_is_ready>:
  d8:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
  dc:	81 70       	andi	r24, 0x01	; 1
  de:	08 95       	ret

000000e0 <__vector_22>:
  e0:	1f 92       	push	r1
  e2:	0f 92       	push	r0
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	0f 92       	push	r0
  e8:	11 24       	eor	r1, r1
  ea:	8f 93       	push	r24
  ec:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
  f0:	80 ff       	sbrs	r24, 0
  f2:	08 c0       	rjmp	.+16     	; 0x104 <__EEPROM_REGION_LENGTH__+0x4>
  f4:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
  f8:	81 60       	ori	r24, 0x01	; 1
  fa:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <__DATA_REGION_ORIGIN__>
 104:	8f 91       	pop	r24
 106:	0f 90       	pop	r0
 108:	0f be       	out	0x3f, r0	; 63
 10a:	0f 90       	pop	r0
 10c:	1f 90       	pop	r1
 10e:	18 95       	reti

00000110 <clock_init>:
 110:	21 e0       	ldi	r18, 0x01	; 1
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	88 ed       	ldi	r24, 0xD8	; 216
 116:	84 bf       	out	0x34, r24	; 52
 118:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
 11c:	08 95       	ret

0000011e <transmit_to_DV>:
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	83 e0       	ldi	r24, 0x03	; 3
 124:	0e 94 0d 01 	call	0x21a	; 0x21a <usart0_put_c>
 128:	c1 e0       	ldi	r28, 0x01	; 1
 12a:	d8 e3       	ldi	r29, 0x38	; 56
 12c:	8c 81       	ldd	r24, Y+4	; 0x04
 12e:	0e 94 0d 01 	call	0x21a	; 0x21a <usart0_put_c>
 132:	8d 81       	ldd	r24, Y+5	; 0x05
 134:	0e 94 0d 01 	call	0x21a	; 0x21a <usart0_put_c>
 138:	8e 81       	ldd	r24, Y+6	; 0x06
 13a:	0e 94 0d 01 	call	0x21a	; 0x21a <usart0_put_c>
 13e:	8f 81       	ldd	r24, Y+7	; 0x07
 140:	0e 94 0d 01 	call	0x21a	; 0x21a <usart0_put_c>
 144:	8c ef       	ldi	r24, 0xFC	; 252
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	0c 94 0d 01 	jmp	0x21a	; 0x21a <usart0_put_c>

0000014e <event_system_init>:
 14e:	e0 e8       	ldi	r30, 0x80	; 128
 150:	f1 e0       	ldi	r31, 0x01	; 1
 152:	86 e0       	ldi	r24, 0x06	; 6
 154:	80 8b       	std	Z+16, r24	; 0x10
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	80 a7       	std	Z+40, r24	; 0x28
 15a:	08 95       	ret

0000015c <io_init>:
 15c:	e0 e2       	ldi	r30, 0x20	; 32
 15e:	f4 e0       	ldi	r31, 0x04	; 4
 160:	84 e8       	ldi	r24, 0x84	; 132
 162:	81 83       	std	Z+1, r24	; 0x01
 164:	a0 e0       	ldi	r26, 0x00	; 0
 166:	b4 e0       	ldi	r27, 0x04	; 4
 168:	55 96       	adiw	r26, 0x15	; 21
 16a:	8c 91       	ld	r24, X
 16c:	55 97       	sbiw	r26, 0x15	; 21
 16e:	84 60       	ori	r24, 0x04	; 4
 170:	55 96       	adiw	r26, 0x15	; 21
 172:	8c 93       	st	X, r24
 174:	80 e8       	ldi	r24, 0x80	; 128
 176:	86 83       	std	Z+6, r24	; 0x06
 178:	08 95       	ret

0000017a <main>:
 17a:	0e 94 88 00 	call	0x110	; 0x110 <clock_init>
 17e:	0e 94 ae 00 	call	0x15c	; 0x15c <io_init>
 182:	0e 94 50 00 	call	0xa0	; 0xa0 <adc_init>
 186:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <rtc_init>
 18a:	0e 94 a7 00 	call	0x14e	; 0x14e <event_system_init>
 18e:	0e 94 04 01 	call	0x208	; 0x208 <usart0_init>
 192:	c0 e8       	ldi	r28, 0x80	; 128
 194:	0e 94 6c 00 	call	0xd8	; 0xd8 <adc_result_is_ready>
 198:	88 23       	and	r24, r24
 19a:	e1 f3       	breq	.-8      	; 0x194 <main+0x1a>
 19c:	0e 94 5e 00 	call	0xbc	; 0xbc <adc_get_sample>
 1a0:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <adc_t+0x4>
 1a4:	90 93 06 38 	sts	0x3806, r25	; 0x803806 <adc_t+0x5>
 1a8:	0e 94 63 00 	call	0xc6	; 0xc6 <adc_get_result>
 1ac:	60 93 01 38 	sts	0x3801, r22	; 0x803801 <adc_t>
 1b0:	70 93 02 38 	sts	0x3802, r23	; 0x803802 <adc_t+0x1>
 1b4:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <adc_t+0x2>
 1b8:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <adc_t+0x3>
 1bc:	dc 01       	movw	r26, r24
 1be:	cb 01       	movw	r24, r22
 1c0:	2a e0       	ldi	r18, 0x0A	; 10
 1c2:	b6 95       	lsr	r27
 1c4:	a7 95       	ror	r26
 1c6:	97 95       	ror	r25
 1c8:	87 95       	ror	r24
 1ca:	2a 95       	dec	r18
 1cc:	d1 f7       	brne	.-12     	; 0x1c2 <main+0x48>
 1ce:	80 93 07 38 	sts	0x3807, r24	; 0x803807 <adc_t+0x6>
 1d2:	90 93 08 38 	sts	0x3808, r25	; 0x803808 <adc_t+0x7>
 1d6:	0e 94 8f 00 	call	0x11e	; 0x11e <transmit_to_DV>
 1da:	c0 93 27 04 	sts	0x0427, r28	; 0x800427 <__RODATA_PM_OFFSET__+0x7f8427>
 1de:	da cf       	rjmp	.-76     	; 0x194 <main+0x1a>

000001e0 <rtc_init>:
 1e0:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7f8141>
 1e4:	81 11       	cpse	r24, r1
 1e6:	fc cf       	rjmp	.-8      	; 0x1e0 <rtc_init>
 1e8:	81 e8       	ldi	r24, 0x81	; 129
 1ea:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__RODATA_PM_OFFSET__+0x7f8140>
 1ee:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__RODATA_PM_OFFSET__+0x7f8147>
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	92 e0       	ldi	r25, 0x02	; 2
 1f6:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__RODATA_PM_OFFSET__+0x7f814a>
 1fa:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__RODATA_PM_OFFSET__+0x7f814b>
 1fe:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7f8141>
 202:	81 11       	cpse	r24, r1
 204:	fc cf       	rjmp	.-8      	; 0x1fe <rtc_init+0x1e>
 206:	08 95       	ret

00000208 <usart0_init>:
 208:	e0 e0       	ldi	r30, 0x00	; 0
 20a:	f8 e0       	ldi	r31, 0x08	; 8
 20c:	80 e4       	ldi	r24, 0x40	; 64
 20e:	86 83       	std	Z+6, r24	; 0x06
 210:	8b e5       	ldi	r24, 0x5B	; 91
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	80 87       	std	Z+8, r24	; 0x08
 216:	91 87       	std	Z+9, r25	; 0x09
 218:	08 95       	ret

0000021a <usart0_put_c>:
 21a:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 21e:	95 ff       	sbrs	r25, 5
 220:	fc cf       	rjmp	.-8      	; 0x21a <usart0_put_c>
 222:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
 226:	08 95       	ret

00000228 <_exit>:
 228:	f8 94       	cli

0000022a <__stop_program>:
 22a:	ff cf       	rjmp	.-2      	; 0x22a <__stop_program>
