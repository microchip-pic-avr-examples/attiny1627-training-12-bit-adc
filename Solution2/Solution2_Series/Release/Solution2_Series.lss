
Solution2_Series.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  00000310  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000029c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00803800  00803800  00000310  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000340  2**2
                  CONTENTS, READONLY
  5 .debug_info   00001c2f  00000000  00000000  00000380  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001ab0  00000000  00000000  00001faf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000014b  00000000  00000000  00003a5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000c8d  00000000  00000000  00003baa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  58:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__vector_22>
  5c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  60:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  68:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  6c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  70:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  74:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	df e3       	ldi	r29, 0x3F	; 63
  82:	de bf       	out	0x3e, r29	; 62

00000084 <__do_clear_bss>:
  84:	28 e3       	ldi	r18, 0x38	; 56
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b8 e3       	ldi	r27, 0x38	; 56
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	ab 30       	cpi	r26, 0x0B	; 11
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <main>
  98:	0c 94 4c 01 	jmp	0x298	; 0x298 <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <adc_init>:
  a0:	e0 e0       	ldi	r30, 0x00	; 0
  a2:	f6 e0       	ldi	r31, 0x06	; 6
  a4:	81 e8       	ldi	r24, 0x81	; 129
  a6:	80 83       	st	Z, r24
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	81 83       	std	Z+1, r24	; 0x01
  ac:	90 e5       	ldi	r25, 0x50	; 80
  ae:	92 83       	std	Z+2, r25	; 0x02
  b0:	93 e0       	ldi	r25, 0x03	; 3
  b2:	90 87       	std	Z+8, r25	; 0x08
  b4:	9a e0       	ldi	r25, 0x0A	; 10
  b6:	91 87       	std	Z+9, r25	; 0x09
  b8:	95 e0       	ldi	r25, 0x05	; 5
  ba:	94 87       	std	Z+12, r25	; 0x0c
  bc:	94 e2       	ldi	r25, 0x24	; 36
  be:	92 87       	std	Z+10, r25	; 0x0a
  c0:	84 83       	std	Z+4, r24	; 0x04
  c2:	08 95       	ret

000000c4 <adc_get_sample>:
  c4:	80 91 14 06 	lds	r24, 0x0614	; 0x800614 <__RODATA_PM_OFFSET__+0x7f8614>
  c8:	90 91 15 06 	lds	r25, 0x0615	; 0x800615 <__RODATA_PM_OFFSET__+0x7f8615>
  cc:	08 95       	ret

000000ce <adc_get_result>:
  ce:	60 91 10 06 	lds	r22, 0x0610	; 0x800610 <__RODATA_PM_OFFSET__+0x7f8610>
  d2:	70 91 11 06 	lds	r23, 0x0611	; 0x800611 <__RODATA_PM_OFFSET__+0x7f8611>
  d6:	80 91 12 06 	lds	r24, 0x0612	; 0x800612 <__RODATA_PM_OFFSET__+0x7f8612>
  da:	90 91 13 06 	lds	r25, 0x0613	; 0x800613 <__RODATA_PM_OFFSET__+0x7f8613>
  de:	08 95       	ret

000000e0 <adc_result_is_ready>:
  e0:	80 91 00 38 	lds	r24, 0x3800	; 0x803800 <__DATA_REGION_ORIGIN__>
  e4:	88 23       	and	r24, r24
  e6:	21 f0       	breq	.+8      	; 0xf0 <adc_result_is_ready+0x10>
  e8:	10 92 00 38 	sts	0x3800, r1	; 0x803800 <__DATA_REGION_ORIGIN__>
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	08 95       	ret
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	08 95       	ret

000000f4 <__vector_22>:
  f4:	1f 92       	push	r1
  f6:	0f 92       	push	r0
  f8:	0f b6       	in	r0, 0x3f	; 63
  fa:	0f 92       	push	r0
  fc:	11 24       	eor	r1, r1
  fe:	8f 93       	push	r24
 100:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
 104:	80 ff       	sbrs	r24, 0
 106:	08 c0       	rjmp	.+16     	; 0x118 <__EEPROM_REGION_LENGTH__+0x18>
 108:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
 10c:	81 60       	ori	r24, 0x01	; 1
 10e:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <__DATA_REGION_ORIGIN__>
 118:	8f 91       	pop	r24
 11a:	0f 90       	pop	r0
 11c:	0f be       	out	0x3f, r0	; 63
 11e:	0f 90       	pop	r0
 120:	1f 90       	pop	r1
 122:	18 95       	reti

00000124 <clock_init>:
 124:	21 e0       	ldi	r18, 0x01	; 1
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	88 ed       	ldi	r24, 0xD8	; 216
 12a:	84 bf       	out	0x34, r24	; 52
 12c:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
 130:	08 95       	ret

00000132 <transmit_to_DV>:
 132:	83 e0       	ldi	r24, 0x03	; 3
 134:	0e 94 45 01 	call	0x28a	; 0x28a <usart0_put_c>
 138:	80 91 05 38 	lds	r24, 0x3805	; 0x803805 <adc_t+0x4>
 13c:	0e 94 45 01 	call	0x28a	; 0x28a <usart0_put_c>
 140:	80 91 06 38 	lds	r24, 0x3806	; 0x803806 <adc_t+0x5>
 144:	0e 94 45 01 	call	0x28a	; 0x28a <usart0_put_c>
 148:	80 91 07 38 	lds	r24, 0x3807	; 0x803807 <adc_t+0x6>
 14c:	0e 94 45 01 	call	0x28a	; 0x28a <usart0_put_c>
 150:	80 91 08 38 	lds	r24, 0x3808	; 0x803808 <adc_t+0x7>
 154:	0e 94 45 01 	call	0x28a	; 0x28a <usart0_put_c>
 158:	8c ef       	ldi	r24, 0xFC	; 252
 15a:	0e 94 45 01 	call	0x28a	; 0x28a <usart0_put_c>
 15e:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 162:	86 ff       	sbrs	r24, 6
 164:	fc cf       	rjmp	.-8      	; 0x15e <transmit_to_DV+0x2c>
 166:	80 91 04 08 	lds	r24, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 16a:	80 64       	ori	r24, 0x40	; 64
 16c:	80 93 04 08 	sts	0x0804, r24	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 170:	08 95       	ret

00000172 <event_system_init>:
 172:	e0 e8       	ldi	r30, 0x80	; 128
 174:	f1 e0       	ldi	r31, 0x01	; 1
 176:	86 e0       	ldi	r24, 0x06	; 6
 178:	80 8b       	std	Z+16, r24	; 0x10
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	80 a7       	std	Z+40, r24	; 0x28
 17e:	08 95       	ret

00000180 <io_init>:
 180:	e0 e2       	ldi	r30, 0x20	; 32
 182:	f4 e0       	ldi	r31, 0x04	; 4
 184:	84 e8       	ldi	r24, 0x84	; 132
 186:	81 83       	std	Z+1, r24	; 0x01
 188:	a0 e0       	ldi	r26, 0x00	; 0
 18a:	b4 e0       	ldi	r27, 0x04	; 4
 18c:	55 96       	adiw	r26, 0x15	; 21
 18e:	8c 91       	ld	r24, X
 190:	55 97       	sbiw	r26, 0x15	; 21
 192:	84 60       	ori	r24, 0x04	; 4
 194:	55 96       	adiw	r26, 0x15	; 21
 196:	8c 93       	st	X, r24
 198:	80 e8       	ldi	r24, 0x80	; 128
 19a:	86 83       	std	Z+6, r24	; 0x06
 19c:	08 95       	ret

0000019e <power_save_pin>:
 19e:	e0 e0       	ldi	r30, 0x00	; 0
 1a0:	f4 e0       	ldi	r31, 0x04	; 4
 1a2:	8c e0       	ldi	r24, 0x0C	; 12
 1a4:	80 8b       	std	Z+16, r24	; 0x10
 1a6:	81 8b       	std	Z+17, r24	; 0x11
 1a8:	82 8b       	std	Z+18, r24	; 0x12
 1aa:	83 8b       	std	Z+19, r24	; 0x13
 1ac:	84 8b       	std	Z+20, r24	; 0x14
 1ae:	85 8b       	std	Z+21, r24	; 0x15
 1b0:	87 8b       	std	Z+23, r24	; 0x17
 1b2:	e0 e2       	ldi	r30, 0x20	; 32
 1b4:	f4 e0       	ldi	r31, 0x04	; 4
 1b6:	80 8b       	std	Z+16, r24	; 0x10
 1b8:	81 8b       	std	Z+17, r24	; 0x11
 1ba:	83 8b       	std	Z+19, r24	; 0x13
 1bc:	84 8b       	std	Z+20, r24	; 0x14
 1be:	85 8b       	std	Z+21, r24	; 0x15
 1c0:	86 8b       	std	Z+22, r24	; 0x16
 1c2:	87 8b       	std	Z+23, r24	; 0x17
 1c4:	e0 e4       	ldi	r30, 0x40	; 64
 1c6:	f4 e0       	ldi	r31, 0x04	; 4
 1c8:	80 8b       	std	Z+16, r24	; 0x10
 1ca:	81 8b       	std	Z+17, r24	; 0x11
 1cc:	82 8b       	std	Z+18, r24	; 0x12
 1ce:	83 8b       	std	Z+19, r24	; 0x13
 1d0:	84 8b       	std	Z+20, r24	; 0x14
 1d2:	85 8b       	std	Z+21, r24	; 0x15
 1d4:	08 95       	ret

000001d6 <main>:
 1d6:	0e 94 cf 00 	call	0x19e	; 0x19e <power_save_pin>
 1da:	0e 94 92 00 	call	0x124	; 0x124 <clock_init>
 1de:	0e 94 c0 00 	call	0x180	; 0x180 <io_init>
 1e2:	0e 94 50 00 	call	0xa0	; 0xa0 <adc_init>
 1e6:	0e 94 24 01 	call	0x248	; 0x248 <rtc_init>
 1ea:	0e 94 b9 00 	call	0x172	; 0x172 <event_system_init>
 1ee:	0e 94 3c 01 	call	0x278	; 0x278 <usart0_init>
 1f2:	0e 94 38 01 	call	0x270	; 0x270 <slpctrl_init>
 1f6:	78 94       	sei
 1f8:	c0 e8       	ldi	r28, 0x80	; 128
 1fa:	88 95       	sleep
 1fc:	0e 94 70 00 	call	0xe0	; 0xe0 <adc_result_is_ready>
 200:	88 23       	and	r24, r24
 202:	d9 f3       	breq	.-10     	; 0x1fa <main+0x24>
 204:	0e 94 62 00 	call	0xc4	; 0xc4 <adc_get_sample>
 208:	80 93 05 38 	sts	0x3805, r24	; 0x803805 <adc_t+0x4>
 20c:	90 93 06 38 	sts	0x3806, r25	; 0x803806 <adc_t+0x5>
 210:	0e 94 67 00 	call	0xce	; 0xce <adc_get_result>
 214:	60 93 01 38 	sts	0x3801, r22	; 0x803801 <adc_t>
 218:	70 93 02 38 	sts	0x3802, r23	; 0x803802 <adc_t+0x1>
 21c:	80 93 03 38 	sts	0x3803, r24	; 0x803803 <adc_t+0x2>
 220:	90 93 04 38 	sts	0x3804, r25	; 0x803804 <adc_t+0x3>
 224:	dc 01       	movw	r26, r24
 226:	cb 01       	movw	r24, r22
 228:	2a e0       	ldi	r18, 0x0A	; 10
 22a:	b6 95       	lsr	r27
 22c:	a7 95       	ror	r26
 22e:	97 95       	ror	r25
 230:	87 95       	ror	r24
 232:	2a 95       	dec	r18
 234:	d1 f7       	brne	.-12     	; 0x22a <main+0x54>
 236:	80 93 07 38 	sts	0x3807, r24	; 0x803807 <adc_t+0x6>
 23a:	90 93 08 38 	sts	0x3808, r25	; 0x803808 <adc_t+0x7>
 23e:	0e 94 99 00 	call	0x132	; 0x132 <transmit_to_DV>
 242:	c0 93 27 04 	sts	0x0427, r28	; 0x800427 <__RODATA_PM_OFFSET__+0x7f8427>
 246:	d9 cf       	rjmp	.-78     	; 0x1fa <main+0x24>

00000248 <rtc_init>:
 248:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7f8141>
 24c:	81 11       	cpse	r24, r1
 24e:	fc cf       	rjmp	.-8      	; 0x248 <rtc_init>
 250:	81 e8       	ldi	r24, 0x81	; 129
 252:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <__RODATA_PM_OFFSET__+0x7f8140>
 256:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <__RODATA_PM_OFFSET__+0x7f8147>
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <__RODATA_PM_OFFSET__+0x7f814a>
 262:	90 93 4b 01 	sts	0x014B, r25	; 0x80014b <__RODATA_PM_OFFSET__+0x7f814b>
 266:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <__RODATA_PM_OFFSET__+0x7f8141>
 26a:	81 11       	cpse	r24, r1
 26c:	fc cf       	rjmp	.-8      	; 0x266 <rtc_init+0x1e>
 26e:	08 95       	ret

00000270 <slpctrl_init>:
 270:	83 e0       	ldi	r24, 0x03	; 3
 272:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__RODATA_PM_OFFSET__+0x7f8050>
 276:	08 95       	ret

00000278 <usart0_init>:
 278:	e0 e0       	ldi	r30, 0x00	; 0
 27a:	f8 e0       	ldi	r31, 0x08	; 8
 27c:	80 e4       	ldi	r24, 0x40	; 64
 27e:	86 83       	std	Z+6, r24	; 0x06
 280:	8b e5       	ldi	r24, 0x5B	; 91
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	80 87       	std	Z+8, r24	; 0x08
 286:	91 87       	std	Z+9, r25	; 0x09
 288:	08 95       	ret

0000028a <usart0_put_c>:
 28a:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 28e:	95 ff       	sbrs	r25, 5
 290:	fc cf       	rjmp	.-8      	; 0x28a <usart0_put_c>
 292:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
 296:	08 95       	ret

00000298 <_exit>:
 298:	f8 94       	cli

0000029a <__stop_program>:
 29a:	ff cf       	rjmp	.-2      	; 0x29a <__stop_program>
