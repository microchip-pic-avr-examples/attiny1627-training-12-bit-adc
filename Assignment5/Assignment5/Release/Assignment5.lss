
Assignment5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  000001fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000188  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00803800  00803800  000001fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000022c  2**2
                  CONTENTS, READONLY
  5 .debug_info   00001c2f  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001ab0  00000000  00000000  00001e9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000014b  00000000  00000000  0000394b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000c8d  00000000  00000000  00003a96  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   8:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
   c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  10:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  14:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  18:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  1c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  20:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  24:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  28:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  2c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  30:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  34:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  38:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  3c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  40:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  44:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  48:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  4c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  50:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  54:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  58:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  5c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  60:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  64:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  68:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  6c:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  70:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>
  74:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__bad_interrupt>

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	df e3       	ldi	r29, 0x3F	; 63
  82:	de bf       	out	0x3e, r29	; 62

00000084 <__do_clear_bss>:
  84:	28 e3       	ldi	r18, 0x38	; 56
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b8 e3       	ldi	r27, 0x38	; 56
  8a:	01 c0       	rjmp	.+2      	; 0x8e <.do_clear_bss_start>

0000008c <.do_clear_bss_loop>:
  8c:	1d 92       	st	X+, r1

0000008e <.do_clear_bss_start>:
  8e:	a6 30       	cpi	r26, 0x06	; 6
  90:	b2 07       	cpc	r27, r18
  92:	e1 f7       	brne	.-8      	; 0x8c <.do_clear_bss_loop>
  94:	0e 94 98 00 	call	0x130	; 0x130 <main>
  98:	0c 94 c2 00 	jmp	0x184	; 0x184 <_exit>

0000009c <__bad_interrupt>:
  9c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a0 <adc_init>:
  a0:	e0 e0       	ldi	r30, 0x00	; 0
  a2:	f6 e0       	ldi	r31, 0x06	; 6
  a4:	81 e0       	ldi	r24, 0x01	; 1
  a6:	80 83       	st	Z, r24
  a8:	83 e0       	ldi	r24, 0x03	; 3
  aa:	81 83       	std	Z+1, r24	; 0x01
  ac:	80 87       	std	Z+8, r24	; 0x08
  ae:	80 e2       	ldi	r24, 0x20	; 32
  b0:	81 87       	std	Z+9, r24	; 0x09
  b2:	08 95       	ret

000000b4 <adc_get_sample>:
  b4:	80 91 14 06 	lds	r24, 0x0614	; 0x800614 <__RODATA_PM_OFFSET__+0x7f8614>
  b8:	90 91 15 06 	lds	r25, 0x0615	; 0x800615 <__RODATA_PM_OFFSET__+0x7f8615>
  bc:	08 95       	ret

000000be <adc_result_is_ready>:
  be:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__RODATA_PM_OFFSET__+0x7f8605>
  c2:	81 70       	andi	r24, 0x01	; 1
  c4:	08 95       	ret

000000c6 <clock_init>:
  c6:	21 e0       	ldi	r18, 0x01	; 1
  c8:	30 e0       	ldi	r19, 0x00	; 0
  ca:	88 ed       	ldi	r24, 0xD8	; 216
  cc:	84 bf       	out	0x34, r24	; 52
  ce:	20 93 61 00 	sts	0x0061, r18	; 0x800061 <__RODATA_PM_OFFSET__+0x7f8061>
  d2:	08 95       	ret

000000d4 <transmit_to_DV>:
  d4:	cf 93       	push	r28
  d6:	df 93       	push	r29
  d8:	83 e0       	ldi	r24, 0x03	; 3
  da:	0e 94 bb 00 	call	0x176	; 0x176 <usart0_put_c>
  de:	c0 e0       	ldi	r28, 0x00	; 0
  e0:	d8 e3       	ldi	r29, 0x38	; 56
  e2:	88 81       	ld	r24, Y
  e4:	0e 94 bb 00 	call	0x176	; 0x176 <usart0_put_c>
  e8:	89 81       	ldd	r24, Y+1	; 0x01
  ea:	0e 94 bb 00 	call	0x176	; 0x176 <usart0_put_c>
  ee:	8a 81       	ldd	r24, Y+2	; 0x02
  f0:	0e 94 bb 00 	call	0x176	; 0x176 <usart0_put_c>
  f4:	8b 81       	ldd	r24, Y+3	; 0x03
  f6:	0e 94 bb 00 	call	0x176	; 0x176 <usart0_put_c>
  fa:	8c 81       	ldd	r24, Y+4	; 0x04
  fc:	0e 94 bb 00 	call	0x176	; 0x176 <usart0_put_c>
 100:	8d 81       	ldd	r24, Y+5	; 0x05
 102:	0e 94 bb 00 	call	0x176	; 0x176 <usart0_put_c>
 106:	8c ef       	ldi	r24, 0xFC	; 252
 108:	df 91       	pop	r29
 10a:	cf 91       	pop	r28
 10c:	0c 94 bb 00 	jmp	0x176	; 0x176 <usart0_put_c>

00000110 <io_init>:
 110:	e0 e2       	ldi	r30, 0x20	; 32
 112:	f4 e0       	ldi	r31, 0x04	; 4
 114:	84 e8       	ldi	r24, 0x84	; 132
 116:	81 83       	std	Z+1, r24	; 0x01
 118:	a0 e0       	ldi	r26, 0x00	; 0
 11a:	b4 e0       	ldi	r27, 0x04	; 4
 11c:	55 96       	adiw	r26, 0x15	; 21
 11e:	8c 91       	ld	r24, X
 120:	55 97       	sbiw	r26, 0x15	; 21
 122:	84 60       	ori	r24, 0x04	; 4
 124:	55 96       	adiw	r26, 0x15	; 21
 126:	8c 93       	st	X, r24
 128:	86 81       	ldd	r24, Z+6	; 0x06
 12a:	80 68       	ori	r24, 0x80	; 128
 12c:	86 83       	std	Z+6, r24	; 0x06
 12e:	08 95       	ret

00000130 <main>:
 130:	0e 94 63 00 	call	0xc6	; 0xc6 <clock_init>
 134:	0e 94 88 00 	call	0x110	; 0x110 <io_init>
 138:	0e 94 50 00 	call	0xa0	; 0xa0 <adc_init>
 13c:	0e 94 b2 00 	call	0x164	; 0x164 <usart0_init>
 140:	80 91 0a 06 	lds	r24, 0x060A	; 0x80060a <__RODATA_PM_OFFSET__+0x7f860a>
 144:	81 60       	ori	r24, 0x01	; 1
 146:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__RODATA_PM_OFFSET__+0x7f860a>
 14a:	0e 94 5f 00 	call	0xbe	; 0xbe <adc_result_is_ready>
 14e:	88 23       	and	r24, r24
 150:	e1 f3       	breq	.-8      	; 0x14a <main+0x1a>
 152:	0e 94 5a 00 	call	0xb4	; 0xb4 <adc_get_sample>
 156:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <__DATA_REGION_ORIGIN__>
 15a:	90 93 01 38 	sts	0x3801, r25	; 0x803801 <__DATA_REGION_ORIGIN__+0x1>
 15e:	0e 94 6a 00 	call	0xd4	; 0xd4 <transmit_to_DV>
 162:	f3 cf       	rjmp	.-26     	; 0x14a <main+0x1a>

00000164 <usart0_init>:
 164:	e0 e0       	ldi	r30, 0x00	; 0
 166:	f8 e0       	ldi	r31, 0x08	; 8
 168:	80 ec       	ldi	r24, 0xC0	; 192
 16a:	86 83       	std	Z+6, r24	; 0x06
 16c:	8b e5       	ldi	r24, 0x5B	; 91
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	80 87       	std	Z+8, r24	; 0x08
 172:	91 87       	std	Z+9, r25	; 0x09
 174:	08 95       	ret

00000176 <usart0_put_c>:
 176:	90 91 04 08 	lds	r25, 0x0804	; 0x800804 <__RODATA_PM_OFFSET__+0x7f8804>
 17a:	95 ff       	sbrs	r25, 5
 17c:	fc cf       	rjmp	.-8      	; 0x176 <usart0_put_c>
 17e:	80 93 02 08 	sts	0x0802, r24	; 0x800802 <__RODATA_PM_OFFSET__+0x7f8802>
 182:	08 95       	ret

00000184 <_exit>:
 184:	f8 94       	cli

00000186 <__stop_program>:
 186:	ff cf       	rjmp	.-2      	; 0x186 <__stop_program>
